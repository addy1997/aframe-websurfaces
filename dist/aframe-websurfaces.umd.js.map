{"version":3,"file":"aframe-websurfaces.umd.js","sources":["../src/lib/CSS3DRenderer.js","../src/constants.js","../src/DOMContext.js","../src/DOMElement.js","../src/websurface.js"],"sourcesContent":["/**\n * Based on http://www.emagix.net/academic/mscs-project/item/camera-sync-with-css3-and-webgl-threejs\n */\n\nclass CSS3DObject extends THREE.Object3D {\n  constructor(element) {\n    super();\n\n    this.element = element || document.createElement('div');\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    this.addEventListener('removed', function () {\n      this.traverse(function (object) {\n        if (object.element instanceof Element && object.element.parentNode !== null) {\n          object.element.parentNode.removeChild(object.element);\n        }\n      });\n    });\n  }\n\n  copy(source, recursive) {\n    super.copy(source, recursive);\n\n    this.element = source.element.cloneNode(true);\n\n    return this;\n  }\n}\n\nCSS3DObject.prototype.isCSS3DObject = true;\n\nclass CSS3DSprite extends CSS3DObject {\n  constructor(element) {\n    super(element);\n\n    this.rotation2D = 0;\n  }\n\n  copy(source, recursive) {\n    super.copy(source, recursive);\n\n    this.rotation2D = source.rotation2D;\n\n    return this;\n  }\n}\n\nCSS3DSprite.prototype.isCSS3DSprite = true;\n\n//\n\nconst _matrix = new THREE.Matrix4();\nconst _matrix2 = new THREE.Matrix4();\n\nclass CSS3DRenderer {\n  constructor() {\n    const _this = this;\n\n    let _width, _height;\n    let _widthHalf, _heightHalf;\n\n    const cache = {\n      camera: { fov: 0, style: '' },\n      objects: new WeakMap(),\n    };\n\n    const domElement = document.createElement('div');\n    domElement.style.overflow = 'hidden';\n\n    this.domElement = domElement;\n\n    const cameraElement = document.createElement('div');\n\n    cameraElement.style.transformStyle = 'preserve-3d';\n    cameraElement.style.pointerEvents = 'none';\n\n    domElement.appendChild(cameraElement);\n\n    this.getSize = function () {\n      return {\n        width: _width,\n        height: _height,\n      };\n    };\n\n    this.render = function (scene, camera) {\n      const fov = camera.projectionMatrix.elements[5] * _heightHalf;\n\n      if (cache.camera.fov !== fov) {\n        domElement.style.perspective = camera.isPerspectiveCamera ? fov + 'px' : '';\n        cache.camera.fov = fov;\n      }\n\n      if (scene.autoUpdate === true) scene.updateMatrixWorld();\n      if (camera.parent === null) camera.updateMatrixWorld();\n\n      let tx, ty;\n\n      if (camera.isOrthographicCamera) {\n        tx = -(camera.right + camera.left) / 2;\n        ty = (camera.top + camera.bottom) / 2;\n      }\n\n      const cameraCSSMatrix = camera.isOrthographicCamera\n        ? 'scale(' +\n          fov +\n          ')' +\n          'translate(' +\n          epsilon(tx) +\n          'px,' +\n          epsilon(ty) +\n          'px)' +\n          getCameraCSSMatrix(camera.matrixWorldInverse)\n        : 'translateZ(' + fov + 'px)' + getCameraCSSMatrix(camera.matrixWorldInverse);\n\n      const style = cameraCSSMatrix + 'translate(' + _widthHalf + 'px,' + _heightHalf + 'px)';\n\n      if (cache.camera.style !== style) {\n        cameraElement.style.transform = style;\n\n        cache.camera.style = style;\n      }\n\n      renderObject(scene, scene, camera, cameraCSSMatrix);\n    };\n\n    this.setSize = function (width, height) {\n      _width = width;\n      _height = height;\n      _widthHalf = _width / 2;\n      _heightHalf = _height / 2;\n\n      domElement.style.width = width + 'px';\n      domElement.style.height = height + 'px';\n\n      cameraElement.style.width = width + 'px';\n      cameraElement.style.height = height + 'px';\n    };\n\n    function epsilon(value) {\n      return Math.abs(value) < 1e-10 ? 0 : value;\n    }\n\n    function getCameraCSSMatrix(matrix) {\n      const elements = matrix.elements;\n\n      return (\n        'matrix3d(' +\n        epsilon(elements[0]) +\n        ',' +\n        epsilon(-elements[1]) +\n        ',' +\n        epsilon(elements[2]) +\n        ',' +\n        epsilon(elements[3]) +\n        ',' +\n        epsilon(elements[4]) +\n        ',' +\n        epsilon(-elements[5]) +\n        ',' +\n        epsilon(elements[6]) +\n        ',' +\n        epsilon(elements[7]) +\n        ',' +\n        epsilon(elements[8]) +\n        ',' +\n        epsilon(-elements[9]) +\n        ',' +\n        epsilon(elements[10]) +\n        ',' +\n        epsilon(elements[11]) +\n        ',' +\n        epsilon(elements[12]) +\n        ',' +\n        epsilon(-elements[13]) +\n        ',' +\n        epsilon(elements[14]) +\n        ',' +\n        epsilon(elements[15]) +\n        ')'\n      );\n    }\n\n    function getObjectCSSMatrix(matrix) {\n      const elements = matrix.elements;\n      const matrix3d =\n        'matrix3d(' +\n        epsilon(elements[0]) +\n        ',' +\n        epsilon(elements[1]) +\n        ',' +\n        epsilon(elements[2]) +\n        ',' +\n        epsilon(elements[3]) +\n        ',' +\n        epsilon(-elements[4]) +\n        ',' +\n        epsilon(-elements[5]) +\n        ',' +\n        epsilon(-elements[6]) +\n        ',' +\n        epsilon(-elements[7]) +\n        ',' +\n        epsilon(elements[8]) +\n        ',' +\n        epsilon(elements[9]) +\n        ',' +\n        epsilon(elements[10]) +\n        ',' +\n        epsilon(elements[11]) +\n        ',' +\n        epsilon(elements[12]) +\n        ',' +\n        epsilon(elements[13]) +\n        ',' +\n        epsilon(elements[14]) +\n        ',' +\n        epsilon(elements[15]) +\n        ')';\n\n      return 'translate(-50%,-50%)' + matrix3d;\n    }\n\n    function renderObject(object, scene, camera, cameraCSSMatrix) {\n      if (object.isCSS3DObject) {\n        object.onBeforeRender(_this, scene, camera);\n\n        let style;\n\n        if (object.isCSS3DSprite) {\n          // http://swiftcoder.wordpress.com/2008/11/25/constructing-a-billboard-matrix/\n\n          _matrix.copy(camera.matrixWorldInverse);\n          _matrix.transpose();\n\n          if (object.rotation2D !== 0) _matrix.multiply(_matrix2.makeRotationZ(object.rotation2D));\n\n          _matrix.copyPosition(object.matrixWorld);\n          _matrix.scale(object.scale);\n\n          _matrix.elements[3] = 0;\n          _matrix.elements[7] = 0;\n          _matrix.elements[11] = 0;\n          _matrix.elements[15] = 1;\n\n          style = getObjectCSSMatrix(_matrix);\n        } else {\n          style = getObjectCSSMatrix(object.matrixWorld);\n        }\n\n        const element = object.element;\n        const cachedObject = cache.objects.get(object);\n\n        if (cachedObject === undefined || cachedObject.style !== style) {\n          element.style.transform = style;\n\n          const objectData = { style: style };\n          cache.objects.set(object, objectData);\n        }\n\n        element.style.display = object.visible ? '' : 'none';\n\n        if (element.parentNode !== cameraElement) {\n          cameraElement.appendChild(element);\n        }\n\n        object.onAfterRender(_this, scene, camera);\n      }\n\n      for (let i = 0, l = object.children.length; i < l; i++) {\n        renderObject(object.children[i], scene, camera, cameraCSSMatrix);\n      }\n    }\n  }\n}\n\nexport { CSS3DObject, CSS3DSprite, CSS3DRenderer };\n","/**\n * Useful for projecting to scale high-resolution DOM elements\n */\nexport const cssFactor = 100;\n","import { CSS3DRenderer } from './lib/CSS3DRenderer';\nimport { cssFactor } from './constants';\nexport class DOMContext {\n  /**\n   * DOM context instance\n   * @param camera  A perspective camera instance to draw from\n   */\n  constructor(camera, websurfaceEntity) {\n    this.websurfaceEntity = websurfaceEntity;\n    // Set default settings\n    this.enabled = true;\n    // Init renderer\n    this.cssRenderer = new CSS3DRenderer();\n    this.domElement = this.cssRenderer.domElement;\n    this.domElement.style.position = 'fixed';\n    this.domElement.style.zIndex = '-2';\n    // Init camera\n    this.cssCamera = new THREE.PerspectiveCamera(\n      camera.fov,\n      camera.aspect,\n      camera.near * cssFactor,\n      camera.far * cssFactor\n    );\n    this.camera = camera;\n    // Init scene\n    this.cssScene = new THREE.Scene();\n    // Bind update\n    this.update = this.update.bind(this);\n  }\n  /**\n   * Resizes the DOM context's renderer and camera\n   * @param width Target width\n   * @param height Target height\n   */\n  setSize(width, height) {\n    this.cssRenderer.setSize(width, height);\n    this.cssCamera.aspect = width / height;\n    this.cssCamera.updateProjectionMatrix();\n  }\n  /**\n   * Updates the DOM context's renderer and camera states\n   */\n  update() {\n    // Sync CSS camera with WebGL camera\n    this.camera.getWorldPosition(this.cssCamera.position);\n    this.cssCamera.position.multiplyScalar(cssFactor);\n    this.camera.getWorldQuaternion(this.cssCamera.quaternion);\n\n    // Render projection\n    this.cssRenderer.render(this.cssScene, this.cssCamera);\n  }\n}\n","import { CSS3DObject } from './lib/CSS3DRenderer';\nimport { cssFactor } from './constants';\nexport class DOMElement extends THREE.Mesh {\n  /**\n   * DOM element that is projected into 3D space\n   * @param context A DOM context instance to draw on\n   * @param domElement A DOM element to project\n   * @param options DOM element options\n   * @param options.elementWidth DOM element width\n   * @param options.width 3D plane width\n   * @param options.height 3D plane height\n   */\n  constructor(context, domElement, width, height, { elementWidth = 1280 } = {}) {\n    // Create portal mesh\n    const geometry = new THREE.PlaneGeometry(width, height);\n    const material = new THREE.MeshBasicMaterial({\n      opacity: 0,\n      blending: THREE.NoBlending,\n      side: new THREE.DoubleSide,\n      color: new THREE.Color(0, 0, 0),\n    });\n    super(geometry, material);\n    // Expose params\n    this.context = context;\n    this.domElement = domElement;\n    this.aspectRatio = height / width;\n    this.elementWidth = elementWidth;\n    this.elementHeight = this.elementWidth * this.aspectRatio;\n    this.width = width;\n    this.height = height;\n    // Set initial size\n    this.resizeElement();\n    // Init 3D DOM\n    this.cssObject = new CSS3DObject(this.domElement);\n    this.cssObject.scale.multiplyScalar(cssFactor / (this.elementWidth / this.width));\n    //@custom\n    this.cssObjectInitialScale = this.cssObject.scale;\n    // Init helpers\n    this.size = new THREE.Vector3();\n    this.box = new THREE.Box3();\n    // Init events\n    this.addEventListener('added', this.handleAdded);\n    this.addEventListener('removed', this.handleRemoved);\n    // Bind update\n    this.update = this.update.bind(this);\n  }\n  /**\n   * Adds the current cssObject to the scene\n   */\n  handleAdded() {\n    this.context.cssScene.add(this.cssObject);\n  }\n  /**\n   * Removes the current cssObject from the scene\n   */\n  handleRemoved() {\n    this.context.cssScene.remove(this.cssObject);\n  }\n  /**\n   * Resizes DOM element to sync with projection\n   */\n  resizeElement() {\n    this.domElement.style.width = `${this.elementWidth}px`;\n    this.domElement.style.height = `${this.elementHeight}px`;\n  }\n  /**\n   * Updates the projected DOM element\n   * @param domElement A DOM element to project\n   */\n  setElement(domElement) {\n    // Cleanup previous element\n    if (this.domElement.parentNode) {\n      this.domElement.parentNode.removeChild(this.domElement);\n    }\n    // Set new element\n    this.domElement = domElement;\n    this.cssObject.element = domElement;\n    // Reset element size\n    this.resizeElement();\n  }\n  /**\n   * Updates the DOM element and its projection states\n   */\n  //@custom\n  update(obj) {\n    // Sync CSS properties with WebGL mesh\n    this.cssObject.quaternion.copy(obj.quaternion);\n    this.cssObject.position.copy(obj.position).multiplyScalar(cssFactor);\n    // Calculate CSS scale factor\n    this.box.setFromObject(this).getSize(this.size);\n    const scaleFactor = obj.scale;\n    // Sync CSS scale with WebGL projection\n    if (this.oldScaleFactor != scaleFactor) {\n      this.oldScaleFactor = scaleFactor;\n      this.cssObject.scale.set(\n        this.cssObjectInitialScale.x,\n        this.cssObjectInitialScale.y,\n        this.cssObjectInitialScale.z\n      );\n      this.cssObject.scale.multiply(scaleFactor);\n    }\n    this.cssObject.visible = obj.visible;\n  }\n  /**\n   * Disposes WebGL and DOM elements\n   */\n  dispose() {\n    // Cleanup events\n    this.removeEventListener('added', this.handleAdded);\n    this.removeEventListener('removed', this.handleRemoved);\n    // Cleanup DOM\n    this.domElement.remove();\n    // Cleanup WebGL\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\n","//uses a modified version of https://github.com/CodyJasonBennett/three-dom-elements\nimport { DOMContext } from './DOMContext';\nimport { DOMElement } from './DOMElement';\nexport const component = AFRAME.registerComponent('websurface', {\n  schema: {\n    url: { default: 'https://aframe.io' },\n    width: { default: 1 },\n    height: { default: 0.75 },\n    isInteractable: { default: true },\n    frameSkips: { default: 1 },\n    autoSceneStyling: { default: true },\n  },\n\n  init: function () {\n    const el = this.el;\n    const data = this.data;\n\n    if (data.autoSceneStyling == true) {\n      el.sceneEl.style.position = 'absolute';\n      el.sceneEl.style.zIndex = '1';\n    }\n\n    if (data.isInteractable == true) {\n      data.mouseHasLeftScreen = true;\n      //geometry for click detection\n      el.setAttribute('geometry', `primitive:plane; width:${data.width}; height:${data.height};`);\n\n      el.addEventListener('click', function () {\n        if (data.mouseHasLeftScreen == false) return;\n        document.exitPointerLock();\n        el.sceneEl.style.zIndex = '-1';\n        data.mouseHasLeftScreen = false;\n      });\n\n      el.addEventListener('mouseenter', function () {\n        data.context.domElement.style.zIndex = '0';\n      });\n\n      el.addEventListener('mouseleave', function () {\n        data.context.domElement.style.zIndex = '-2';\n        data.mouseHasLeftScreen = true;\n      });\n    }\n\n    el.addEventListener('cam-loaded', function () {\n      const iframe = document.createElement('iframe');\n      iframe.setAttribute('src', data.url);\n      iframe.style.border = 'none';\n\n      const camera = el.sceneEl.camera;\n      const context = new DOMContext(camera, el);\n      context.setSize(window.innerWidth, window.innerHeight);\n      document.body.appendChild(context.domElement);\n\n      const element = new DOMElement(context, iframe, data.width, data.height);\n      el.object3D.add(element);\n\n      if (data.isInteractable == true) {\n        const div = document.createElement('div');\n        div.style.position = 'fixed';\n        div.style.top = '0';\n        div.style.width = '100%';\n        div.style.height = '100%';\n        div.style.zIndex = '-1';\n        context.domElement.appendChild(div);\n        div.addEventListener('click', function () {\n          el.sceneEl.style.zIndex = 1;\n        });\n      }\n\n      this.websurface_iframe = iframe;\n      this.css3d_context = context;\n\n      data.context = context;\n      data.element = element;\n\n      window.addEventListener('resize', () => {\n        context.setSize(window.innerWidth, window.innerHeight);\n      });\n    });\n    data.frames = 0;\n    data.isCamLoaded = false;\n  },\n\n  tick: function () {\n    const el = this.el;\n    const data = this.data;\n\n    if (data.isPaused == true) return;\n\n    if (data.isCamLoaded == false) {\n      const camera = el.sceneEl.camera;\n      if (camera) {\n        this.el.emit('cam-loaded');\n        data.isCamLoaded = true;\n      }\n      return;\n    }\n\n    const context = data.context;\n    const element = data.element;\n    if (data.frames % data.frameSkips == 0) {\n      if (context) {\n        context.update();\n      }\n      if (element) {\n        element.update(el.object3D);\n      }\n    }\n\n    data.frames++;\n  },\n\n  pause: function () {\n    const data = this.data;\n\n    data.isPaused = true;\n  },\n\n  play: function () {\n    const data = this.data;\n\n    data.isPaused = false;\n  },\n});\n"],"names":["CSS3DObject","element","_this2","document","createElement","style","position","pointerEvents","addEventListener","this","traverse","object","Element","parentNode","removeChild","copy","source","recursive","_THREE$Object3D","cloneNode","THREE","Object3D","prototype","isCSS3DObject","_this3","rotation2D","_CSS3DObject","isCSS3DSprite","_matrix","Matrix4","_matrix2","CSS3DRenderer","_width","_height","_widthHalf","_heightHalf","_this","cache","camera","fov","objects","WeakMap","domElement","overflow","cameraElement","epsilon","value","Math","abs","getCameraCSSMatrix","matrix","elements","getObjectCSSMatrix","renderObject","scene","cameraCSSMatrix","onBeforeRender","matrixWorldInverse","transpose","multiply","makeRotationZ","copyPosition","matrixWorld","scale","cachedObject","get","undefined","transform","set","display","visible","appendChild","onAfterRender","i","l","children","length","transformStyle","getSize","width","height","render","tx","ty","projectionMatrix","perspective","isPerspectiveCamera","autoUpdate","updateMatrixWorld","parent","isOrthographicCamera","right","left","top","bottom","setSize","cssFactor","DOMContext","websurfaceEntity","enabled","cssRenderer","zIndex","cssCamera","PerspectiveCamera","aspect","near","far","cssScene","Scene","update","bind","updateProjectionMatrix","getWorldPosition","multiplyScalar","getWorldQuaternion","quaternion","DOMElement","context","elementWidth","geometry","PlaneGeometry","material","MeshBasicMaterial","opacity","blending","NoBlending","side","DoubleSide","color","Color","aspectRatio","elementHeight","resizeElement","cssObject","cssObjectInitialScale","size","Vector3","box","Box3","handleAdded","handleRemoved","add","remove","setElement","obj","setFromObject","scaleFactor","oldScaleFactor","x","y","z","dispose","removeEventListener","Mesh","component","AFRAME","registerComponent","schema","url","default","isInteractable","frameSkips","autoSceneStyling","init","el","data","sceneEl","mouseHasLeftScreen","setAttribute","exitPointerLock","iframe","border","window","innerWidth","innerHeight","body","object3D","div","websurface_iframe","css3d_context","frames","isCamLoaded","tick","isPaused","emit","pause","play"],"mappings":"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"}