{"version":3,"file":"aframe-websurfaces.modern.js","sources":["../src/lib/CSS3DRenderer.js","../src/DOMContext.js","../src/constants.js","../src/DOMElement.js","../src/websurface.js"],"sourcesContent":["/**\n * Based on http://www.emagix.net/academic/mscs-project/item/camera-sync-with-css3-and-webgl-threejs\n */\n\nclass CSS3DObject extends THREE.Object3D {\n  constructor(element) {\n    super();\n\n    this.element = element || document.createElement('div');\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    this.addEventListener('removed', function () {\n      this.traverse(function (object) {\n        if (object.element instanceof Element && object.element.parentNode !== null) {\n          object.element.parentNode.removeChild(object.element);\n        }\n      });\n    });\n  }\n\n  copy(source, recursive) {\n    super.copy(source, recursive);\n\n    this.element = source.element.cloneNode(true);\n\n    return this;\n  }\n}\n\nCSS3DObject.prototype.isCSS3DObject = true;\n\nclass CSS3DSprite extends CSS3DObject {\n  constructor(element) {\n    super(element);\n\n    this.rotation2D = 0;\n  }\n\n  copy(source, recursive) {\n    super.copy(source, recursive);\n\n    this.rotation2D = source.rotation2D;\n\n    return this;\n  }\n}\n\nCSS3DSprite.prototype.isCSS3DSprite = true;\n\n//\n\nconst _matrix = new THREE.Matrix4();\nconst _matrix2 = new THREE.Matrix4();\n\nclass CSS3DRenderer {\n  constructor() {\n    const _this = this;\n\n    let _width, _height;\n    let _widthHalf, _heightHalf;\n\n    const cache = {\n      camera: { fov: 0, style: '' },\n      objects: new WeakMap(),\n    };\n\n    const domElement = document.createElement('div');\n    domElement.style.overflow = 'hidden';\n\n    this.domElement = domElement;\n\n    const cameraElement = document.createElement('div');\n\n    cameraElement.style.transformStyle = 'preserve-3d';\n    cameraElement.style.pointerEvents = 'none';\n\n    domElement.appendChild(cameraElement);\n\n    this.getSize = function () {\n      return {\n        width: _width,\n        height: _height,\n      };\n    };\n\n    this.render = function (scene, camera) {\n      const fov = camera.projectionMatrix.elements[5] * _heightHalf;\n\n      if (cache.camera.fov !== fov) {\n        domElement.style.perspective = camera.isPerspectiveCamera ? fov + 'px' : '';\n        cache.camera.fov = fov;\n      }\n\n      if (scene.autoUpdate === true) scene.updateMatrixWorld();\n      if (camera.parent === null) camera.updateMatrixWorld();\n\n      let tx, ty;\n\n      if (camera.isOrthographicCamera) {\n        tx = -(camera.right + camera.left) / 2;\n        ty = (camera.top + camera.bottom) / 2;\n      }\n\n      const cameraCSSMatrix = camera.isOrthographicCamera\n        ? 'scale(' +\n          fov +\n          ')' +\n          'translate(' +\n          epsilon(tx) +\n          'px,' +\n          epsilon(ty) +\n          'px)' +\n          getCameraCSSMatrix(camera.matrixWorldInverse)\n        : 'translateZ(' + fov + 'px)' + getCameraCSSMatrix(camera.matrixWorldInverse);\n\n      const style = cameraCSSMatrix + 'translate(' + _widthHalf + 'px,' + _heightHalf + 'px)';\n\n      if (cache.camera.style !== style) {\n        cameraElement.style.transform = style;\n\n        cache.camera.style = style;\n      }\n\n      renderObject(scene, scene, camera, cameraCSSMatrix);\n    };\n\n    this.setSize = function (width, height) {\n      _width = width;\n      _height = height;\n      _widthHalf = _width / 2;\n      _heightHalf = _height / 2;\n\n      domElement.style.width = width + 'px';\n      domElement.style.height = height + 'px';\n\n      cameraElement.style.width = width + 'px';\n      cameraElement.style.height = height + 'px';\n    };\n\n    function epsilon(value) {\n      return Math.abs(value) < 1e-10 ? 0 : value;\n    }\n\n    function getCameraCSSMatrix(matrix) {\n      const elements = matrix.elements;\n\n      return (\n        'matrix3d(' +\n        epsilon(elements[0]) +\n        ',' +\n        epsilon(-elements[1]) +\n        ',' +\n        epsilon(elements[2]) +\n        ',' +\n        epsilon(elements[3]) +\n        ',' +\n        epsilon(elements[4]) +\n        ',' +\n        epsilon(-elements[5]) +\n        ',' +\n        epsilon(elements[6]) +\n        ',' +\n        epsilon(elements[7]) +\n        ',' +\n        epsilon(elements[8]) +\n        ',' +\n        epsilon(-elements[9]) +\n        ',' +\n        epsilon(elements[10]) +\n        ',' +\n        epsilon(elements[11]) +\n        ',' +\n        epsilon(elements[12]) +\n        ',' +\n        epsilon(-elements[13]) +\n        ',' +\n        epsilon(elements[14]) +\n        ',' +\n        epsilon(elements[15]) +\n        ')'\n      );\n    }\n\n    function getObjectCSSMatrix(matrix) {\n      const elements = matrix.elements;\n      const matrix3d =\n        'matrix3d(' +\n        epsilon(elements[0]) +\n        ',' +\n        epsilon(elements[1]) +\n        ',' +\n        epsilon(elements[2]) +\n        ',' +\n        epsilon(elements[3]) +\n        ',' +\n        epsilon(-elements[4]) +\n        ',' +\n        epsilon(-elements[5]) +\n        ',' +\n        epsilon(-elements[6]) +\n        ',' +\n        epsilon(-elements[7]) +\n        ',' +\n        epsilon(elements[8]) +\n        ',' +\n        epsilon(elements[9]) +\n        ',' +\n        epsilon(elements[10]) +\n        ',' +\n        epsilon(elements[11]) +\n        ',' +\n        epsilon(elements[12]) +\n        ',' +\n        epsilon(elements[13]) +\n        ',' +\n        epsilon(elements[14]) +\n        ',' +\n        epsilon(elements[15]) +\n        ')';\n\n      return 'translate(-50%,-50%)' + matrix3d;\n    }\n\n    function renderObject(object, scene, camera, cameraCSSMatrix) {\n      if (object.isCSS3DObject) {\n        object.onBeforeRender(_this, scene, camera);\n\n        let style;\n\n        if (object.isCSS3DSprite) {\n          // http://swiftcoder.wordpress.com/2008/11/25/constructing-a-billboard-matrix/\n\n          _matrix.copy(camera.matrixWorldInverse);\n          _matrix.transpose();\n\n          if (object.rotation2D !== 0) _matrix.multiply(_matrix2.makeRotationZ(object.rotation2D));\n\n          _matrix.copyPosition(object.matrixWorld);\n          _matrix.scale(object.scale);\n\n          _matrix.elements[3] = 0;\n          _matrix.elements[7] = 0;\n          _matrix.elements[11] = 0;\n          _matrix.elements[15] = 1;\n\n          style = getObjectCSSMatrix(_matrix);\n        } else {\n          style = getObjectCSSMatrix(object.matrixWorld);\n        }\n\n        const element = object.element;\n        const cachedObject = cache.objects.get(object);\n\n        if (cachedObject === undefined || cachedObject.style !== style) {\n          element.style.transform = style;\n\n          const objectData = { style: style };\n          cache.objects.set(object, objectData);\n        }\n\n        element.style.display = object.visible ? '' : 'none';\n\n        if (element.parentNode !== cameraElement) {\n          cameraElement.appendChild(element);\n        }\n\n        object.onAfterRender(_this, scene, camera);\n      }\n\n      for (let i = 0, l = object.children.length; i < l; i++) {\n        renderObject(object.children[i], scene, camera, cameraCSSMatrix);\n      }\n    }\n  }\n}\n\nexport { CSS3DObject, CSS3DSprite, CSS3DRenderer };\n","import { CSS3DRenderer } from './lib/CSS3DRenderer';\nimport { cssFactor } from './constants';\nexport class DOMContext {\n  /**\n   * DOM context instance\n   * @param camera  A perspective camera instance to draw from\n   */\n  constructor(camera, websurfaceEntity) {\n    this.websurfaceEntity = websurfaceEntity;\n    // Set default settings\n    this.enabled = true;\n    // Init renderer\n    this.cssRenderer = new CSS3DRenderer();\n    this.domElement = this.cssRenderer.domElement;\n    this.domElement.style.position = 'fixed';\n    this.domElement.style.zIndex = '-2';\n    // Init camera\n    this.cssCamera = new THREE.PerspectiveCamera(\n      camera.fov,\n      camera.aspect,\n      camera.near * cssFactor,\n      camera.far * cssFactor\n    );\n    this.camera = camera;\n    // Init scene\n    this.cssScene = new THREE.Scene();\n    // Bind update\n    this.update = this.update.bind(this);\n  }\n  /**\n   * Resizes the DOM context's renderer and camera\n   * @param width Target width\n   * @param height Target height\n   */\n  setSize(width, height) {\n    this.cssRenderer.setSize(width, height);\n    this.cssCamera.aspect = width / height;\n    this.cssCamera.updateProjectionMatrix();\n  }\n  /**\n   * Updates the DOM context's renderer and camera states\n   */\n  update() {\n    // Sync CSS camera with WebGL camera\n    this.camera.getWorldPosition(this.cssCamera.position);\n    this.cssCamera.position.multiplyScalar(cssFactor);\n    this.camera.getWorldQuaternion(this.cssCamera.quaternion);\n\n    // Render projection\n    this.cssRenderer.render(this.cssScene, this.cssCamera);\n  }\n}\n","/**\n * Useful for projecting to scale high-resolution DOM elements\n */\nexport const cssFactor = 100;\n","import { CSS3DObject } from './lib/CSS3DRenderer';\nimport { cssFactor } from './constants';\nexport class DOMElement extends THREE.Mesh {\n  /**\n   * DOM element that is projected into 3D space\n   * @param context A DOM context instance to draw on\n   * @param domElement A DOM element to project\n   * @param options DOM element options\n   * @param options.elementWidth DOM element width\n   * @param options.width 3D plane width\n   * @param options.height 3D plane height\n   */\n  constructor(context, domElement, width, height, { elementWidth = 1280 } = {}) {\n    // Create portal mesh\n    const geometry = new THREE.PlaneGeometry(width, height);\n    const material = new THREE.MeshBasicMaterial({\n      opacity: 0,\n      blending: THREE.NoBlending,\n      side: THREE.TwoPassDoubleSide,\n      color: new THREE.Color(0, 0, 0),\n    });\n    super(geometry, material);\n    // Expose params\n    this.context = context;\n    this.domElement = domElement;\n    this.aspectRatio = height / width;\n    this.elementWidth = elementWidth;\n    this.elementHeight = this.elementWidth * this.aspectRatio;\n    this.width = width;\n    this.height = height;\n    // Set initial size\n    this.resizeElement();\n    // Init 3D DOM\n    this.cssObject = new CSS3DObject(this.domElement);\n    this.cssObject.scale.multiplyScalar(cssFactor / (this.elementWidth / this.width));\n    //@custom\n    this.cssObjectInitialScale = this.cssObject.scale;\n    // Init helpers\n    this.size = new THREE.Vector3();\n    this.box = new THREE.Box3();\n    // Init events\n    this.addEventListener('added', this.handleAdded);\n    this.addEventListener('removed', this.handleRemoved);\n    // Bind update\n    this.update = this.update.bind(this);\n  }\n  /**\n   * Adds the current cssObject to the scene\n   */\n  handleAdded() {\n    this.context.cssScene.add(this.cssObject);\n  }\n  /**\n   * Removes the current cssObject from the scene\n   */\n  handleRemoved() {\n    this.context.cssScene.remove(this.cssObject);\n  }\n  /**\n   * Resizes DOM element to sync with projection\n   */\n  resizeElement() {\n    this.domElement.style.width = `${this.elementWidth}px`;\n    this.domElement.style.height = `${this.elementHeight}px`;\n  }\n  /**\n   * Updates the projected DOM element\n   * @param domElement A DOM element to project\n   */\n  setElement(domElement) {\n    // Cleanup previous element\n    if (this.domElement.parentNode) {\n      this.domElement.parentNode.removeChild(this.domElement);\n    }\n    // Set new element\n    this.domElement = domElement;\n    this.cssObject.element = domElement;\n    // Reset element size\n    this.resizeElement();\n  }\n  /**\n   * Updates the DOM element and its projection states\n   */\n  //@custom\n  update(obj) {\n    // Sync CSS properties with WebGL mesh\n    this.cssObject.quaternion.copy(obj.quaternion);\n    this.cssObject.position.copy(obj.position).multiplyScalar(cssFactor);\n    // Calculate CSS scale factor\n    this.box.setFromObject(this).getSize(this.size);\n    const scaleFactor = obj.scale;\n    // Sync CSS scale with WebGL projection\n    if (this.oldScaleFactor != scaleFactor) {\n      this.oldScaleFactor = scaleFactor;\n      this.cssObject.scale.set(\n        this.cssObjectInitialScale.x,\n        this.cssObjectInitialScale.y,\n        this.cssObjectInitialScale.z\n      );\n      this.cssObject.scale.multiply(scaleFactor);\n    }\n    this.cssObject.visible = obj.visible;\n  }\n  /**\n   * Disposes WebGL and DOM elements\n   */\n  dispose() {\n    // Cleanup events\n    this.removeEventListener('added', this.handleAdded);\n    this.removeEventListener('removed', this.handleRemoved);\n    // Cleanup DOM\n    this.domElement.remove();\n    // Cleanup WebGL\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\n","//uses a modified version of https://github.com/CodyJasonBennett/three-dom-elements\nimport { DOMContext } from './DOMContext';\nimport { DOMElement } from './DOMElement';\nexport const component = AFRAME.registerComponent('websurface', {\n  schema: {\n    url: { default: 'https://aframe.io' },\n    width: { default: 1 },\n    height: { default: 0.75 },\n    isInteractable: { default: true },\n    frameSkips: { default: 1 },\n    autoSceneStyling: { default: true },\n  },\n\n  init: function () {\n    const el = this.el;\n    const data = this.data;\n\n    if (data.autoSceneStyling == true) {\n      el.sceneEl.style.position = 'absolute';\n      el.sceneEl.style.zIndex = '1';\n    }\n\n    if (data.isInteractable == true) {\n      data.mouseHasLeftScreen = true;\n      //geometry for click detection\n      el.setAttribute('geometry', `primitive:plane; width:${data.width}; height:${data.height};`);\n\n      el.addEventListener('click', function () {\n        if (data.mouseHasLeftScreen == false) return;\n        document.exitPointerLock();\n        el.sceneEl.style.zIndex = '-1';\n        data.mouseHasLeftScreen = false;\n      });\n\n      el.addEventListener('mouseenter', function () {\n        data.context.domElement.style.zIndex = '0';\n      });\n\n      el.addEventListener('mouseleave', function () {\n        data.context.domElement.style.zIndex = '-2';\n        data.mouseHasLeftScreen = true;\n      });\n    }\n\n    el.addEventListener('cam-loaded', function () {\n      const iframe = document.createElement('iframe');\n      iframe.setAttribute('src', data.url);\n      iframe.style.border = 'none';\n\n      const camera = el.sceneEl.camera;\n      const context = new DOMContext(camera, el);\n      context.setSize(window.innerWidth, window.innerHeight);\n      document.body.appendChild(context.domElement);\n\n      const element = new DOMElement(context, iframe, data.width, data.height);\n      el.object3D.add(element);\n\n      if (data.isInteractable == true) {\n        const div = document.createElement('div');\n        div.style.position = 'fixed';\n        div.style.top = '0';\n        div.style.width = '100%';\n        div.style.height = '100%';\n        div.style.zIndex = '-1';\n        context.domElement.appendChild(div);\n        div.addEventListener('click', function () {\n          el.sceneEl.style.zIndex = 1;\n        });\n      }\n\n      this.websurface_iframe = iframe;\n      this.css3d_context = context;\n\n      data.context = context;\n      data.element = element;\n\n      window.addEventListener('resize', () => {\n        context.setSize(window.innerWidth, window.innerHeight);\n      });\n    });\n    data.frames = 0;\n    data.isCamLoaded = false;\n  },\n\n  tick: function () {\n    const el = this.el;\n    const data = this.data;\n\n    if (data.isPaused == true) return;\n\n    if (data.isCamLoaded == false) {\n      const camera = el.sceneEl.camera;\n      if (camera) {\n        this.el.emit('cam-loaded');\n        data.isCamLoaded = true;\n      }\n      return;\n    }\n\n    const context = data.context;\n    const element = data.element;\n    if (data.frames % data.frameSkips == 0) {\n      if (context) {\n        context.update();\n      }\n      if (element) {\n        element.update(el.object3D);\n      }\n    }\n\n    data.frames++;\n  },\n\n  pause: function () {\n    const data = this.data;\n\n    data.isPaused = true;\n  },\n\n  play: function () {\n    const data = this.data;\n\n    data.isPaused = false;\n  },\n});\n"],"names":["CSS3DObject","THREE","Object3D","constructor","element","super","this","document","createElement","style","position","pointerEvents","addEventListener","traverse","object","Element","parentNode","removeChild","copy","source","recursive","cloneNode","prototype","isCSS3DObject","_matrix","Matrix4","_matrix2","CSS3DRenderer","_this","_width","_height","_widthHalf","_heightHalf","cache","camera","fov","objects","WeakMap","domElement","overflow","cameraElement","epsilon","value","Math","abs","getCameraCSSMatrix","matrix","elements","getObjectCSSMatrix","renderObject","scene","cameraCSSMatrix","onBeforeRender","isCSS3DSprite","matrixWorldInverse","transpose","rotation2D","multiply","makeRotationZ","copyPosition","matrixWorld","scale","cachedObject","get","undefined","transform","set","display","visible","appendChild","onAfterRender","i","l","children","length","transformStyle","getSize","width","height","render","projectionMatrix","tx","ty","perspective","isPerspectiveCamera","autoUpdate","updateMatrixWorld","parent","isOrthographicCamera","right","left","top","bottom","setSize","DOMContext","websurfaceEntity","enabled","cssRenderer","zIndex","cssCamera","PerspectiveCamera","aspect","near","far","cssScene","Scene","update","bind","updateProjectionMatrix","getWorldPosition","multiplyScalar","getWorldQuaternion","quaternion","DOMElement","Mesh","context","elementWidth","PlaneGeometry","MeshBasicMaterial","opacity","blending","NoBlending","side","TwoPassDoubleSide","color","Color","aspectRatio","elementHeight","resizeElement","cssObject","cssObjectInitialScale","size","Vector3","box","Box3","handleAdded","handleRemoved","add","remove","setElement","obj","setFromObject","scaleFactor","oldScaleFactor","x","y","z","dispose","removeEventListener","geometry","material","component","AFRAME","registerComponent","schema","url","default","isInteractable","frameSkips","autoSceneStyling","init","el","data","sceneEl","mouseHasLeftScreen","setAttribute","exitPointerLock","iframe","border","window","innerWidth","innerHeight","body","object3D","div","websurface_iframe","css3d_context","frames","isCamLoaded","tick","isPaused","emit","pause","play"],"mappings":"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"}